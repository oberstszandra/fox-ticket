	plugins {
		id 'java'
		id 'org.springframework.boot' version '3.1.1'
		id 'io.spring.dependency-management' version '1.1.0'
		id 'checkstyle'
		id 'jacoco'
	}

	group = 'com.example'
	version = '0.0.1-SNAPSHOT'
	sourceCompatibility = '17'

	repositories {
		mavenCentral()
	}

	checkstyle {
		toolVersion "8.32"
		configFile file("config/checkstyle/checkstyle.xml")
	}
	checkstyleMain {
		source = 'src/main/java'
	}
	checkstyleTest {
		source = 'src/test/java'
	}

	jacocoTestReport {
		reports {
			html.destination file("${buildDir}/jacoco")    }
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-security'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
		implementation 'io.jsonwebtoken:jjwt:0.2'
		implementation 'javax.xml.bind:jaxb-api:2.3.0'
		implementation 'org.modelmapper:modelmapper:2.3.8'
		implementation 'com.sendgrid:sendgrid-java:4.9.3'
		developmentOnly 'org.springframework.boot:spring-boot-devtools'
		testImplementation('org.springframework.boot:spring-boot-starter-test') {
			exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
		}
		testImplementation 'org.springframework.security:spring-security-test'
		runtimeOnly 'com.h2database:h2'
		runtimeOnly 'com.mysql:mysql-connector-j'
	}

	tasks.named('test') {
		useJUnitPlatform()
	}